case LSSOP: {  //<
					string sx = "$t0", sy = "$t1";
					get1 = false;
					loadValue(mc.x, sx, false, va, get1);
					get2 = false;
					loadValue(mc.y, sy, false, va2, get2);
					mcNext = mcVe[i + 1];
					if (mcNext.op == BZ) {  //0跳  x>=y跳
						if (get1 && get2) {
							if (va >= va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {  //va >= $t1
							mipsCodeTable.push_back(mipsCode(ble, sy, int2string(va), mcNext.z));  //ble <=跳转 代价4
						}
						else if (!get1 && get2) {  //$t0 >= va2
							mipsCodeTable.push_back(mipsCode(bge, sx, int2string(va2), mcNext.z));  //bge >=跳转 代价3
						}
						else {  //$t0 >= $t1
							mipsCodeTable.push_back(mipsCode(bge, sx, sy, mcNext.z));  //bge >=跳转 代价3
						}
					}
					else if (mcNext.op == BNZ) {  //1跳 x<y跳
						if (get1 && get2) {
							if (va < va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {  //va < $t1
							mipsCodeTable.push_back(mipsCode(bgt, sy, int2string(va), mcNext.z));  //bgt >跳转 代价4
						}
						else if (!get1 && get2) {  //$t0 < va2
							mipsCodeTable.push_back(mipsCode(blt, sx, int2string(va2), mcNext.z));  //blt <跳转 代价3
						}
						else { //$t0 < $t1
							mipsCodeTable.push_back(mipsCode(blt, sx, sy, mcNext.z));  //blt <跳转 代价3
						}
					}
					i++;
					break;
				}
				case LEQOP: {  //<=
					string sx = "$t0", sy = "$t1";
					get1 = false;
					loadValue(mc.x, sx, false, va, get1);
					get2 = false;
					loadValue(mc.y, sy, false, va2, get2);
					mcNext = mcVe[i + 1];
					if (mcNext.op == BZ) {  //0跳  x>y跳
						if (get1 && get2) {
							if (va > va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {  //va > $t1
							mipsCodeTable.push_back(mipsCode(blt, sy, int2string(va), mcNext.z));  //blt <跳转 代价3
						}
						else if (!get1 && get2) {  //$t0 > va2
							mipsCodeTable.push_back(mipsCode(bgt, sx, int2string(va2), mcNext.z));  //bgt >跳转 代价4
						}
						else {  //$t0 > $t1
							mipsCodeTable.push_back(mipsCode(bgt, sx, sy, mcNext.z));  //bgt >跳转 代价3
						}
					}
					else if (mcNext.op == BNZ) {  //1跳 x<=y跳
						if (get1 && get2) {
							if (va <= va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {  //va <= $t1
							mipsCodeTable.push_back(mipsCode(bge, sy, int2string(va), mcNext.z));  //bge >=跳转 代价3
						}
						else if (!get1 && get2) {  //$t0 <= va2
							mipsCodeTable.push_back(mipsCode(ble, sx, int2string(va2), mcNext.z));  //ble <=跳转 代价4
						}
						else { //$t0 <= $t1
							mipsCodeTable.push_back(mipsCode(ble, sx, sy, mcNext.z));  //ble <=跳转 代价3
						}
					}
					i++;
					break;
				}
				case GREOP: {  //>
					string sx = "$t0", sy = "$t1";
					get1 = false;
					loadValue(mc.x, sx, false, va, get1);
					get2 = false;
					loadValue(mc.y, sy, false, va2, get2);
					mcNext = mcVe[i + 1];
					if (mcNext.op == BZ) {  //0跳  x<=y跳
						if (get1 && get2) {
							if (va <= va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {  //va <= $t1
							mipsCodeTable.push_back(mipsCode(bge, sy, int2string(va), mcNext.z));  //bge >=跳转 代价3
						}
						else if (!get1 && get2) {  //$t0 <= va2
							mipsCodeTable.push_back(mipsCode(ble, sx, int2string(va2), mcNext.z));  //ble <=跳转 代价4
						}
						else { //$t0 <= $t1
							mipsCodeTable.push_back(mipsCode(ble, sx, sy, mcNext.z));  //ble <=跳转 代价3
						}
					}
					else if (mcNext.op == BNZ) {  //1跳 x>y跳
						if (get1 && get2) {
							if (va > va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {  //va > $t1
							mipsCodeTable.push_back(mipsCode(blt, sy, int2string(va), mcNext.z));  //blt <跳转 代价3
						}
						else if (!get1 && get2) {  //$t0 > va2
							mipsCodeTable.push_back(mipsCode(bgt, sx, int2string(va2), mcNext.z));  //bgt >跳转 代价4
						}
						else {  //$t0 > $t1
							mipsCodeTable.push_back(mipsCode(bgt, sx, sy, mcNext.z));  //bgt >跳转 代价3
						}
					}
					i++;
					break;
				}
				case GEQOP: {  //>=
					string sx = "$t0", sy = "$t1";
					get1 = false;
					loadValue(mc.x, sx, false, va, get1);
					get2 = false;
					loadValue(mc.y, sy, false, va2, get2);
					mcNext = mcVe[i + 1];
					if (mcNext.op == BZ) {  //0跳  x<y跳
						if (get1 && get2) {
							if (va < va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {  //va < $t1
							mipsCodeTable.push_back(mipsCode(bgt, sy, int2string(va), mcNext.z));  //bgt >跳转 代价4
						}
						else if (!get1 && get2) {  //$t0 < va2
							mipsCodeTable.push_back(mipsCode(blt, sx, int2string(va2), mcNext.z));  //blt <跳转 代价3
						}
						else { //$t0 < $t1
							mipsCodeTable.push_back(mipsCode(blt, sx, sy, mcNext.z));  //blt <跳转 代价3
						}
					}
					else if (mcNext.op == BNZ) {  //1跳 x>=y跳
						if (get1 && get2) {
							if (va >= va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {  //va >= $t1
							mipsCodeTable.push_back(mipsCode(ble, sy, int2string(va), mcNext.z));  //ble <=跳转 代价4
						}
						else if (!get1 && get2) {  //$t0 >= va2
							mipsCodeTable.push_back(mipsCode(bge, sx, int2string(va2), mcNext.z));  //bge >=跳转 代价3
						}
						else {  //$t0 >= $t1
							mipsCodeTable.push_back(mipsCode(bge, sx, sy, mcNext.z));  //bge >=跳转 代价3
						}
					}
					i++;
					break;
				}
				case EQLOP: {
					string sx = "$t0", sy = "$t1";
					get1 = false;
					loadValue(mc.x, sx, false, va, get1);
					get2 = false;
					loadValue(mc.y, sy, false, va2, get2);
					mcNext = mcVe[i + 1];
					if (mcNext.op == BZ) {  //0跳
						if (get1 && get2) {
							if (va != va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {
							mipsCodeTable.push_back(mipsCode(li, sx, "", "", va));
							mipsCodeTable.push_back(mipsCode(bne, sx, sy, mcNext.z));
						}
						else if (!get1 && get2) {
							mipsCodeTable.push_back(mipsCode(li, sy, "", "", va2));
							mipsCodeTable.push_back(mipsCode(bne, sx, sy, mcNext.z));
						}
						else {
							mipsCodeTable.push_back(mipsCode(bne, sx, sy, mcNext.z));
						}
					}
					else if (mcNext.op == BNZ) {  //1跳
						if (get1 && get2) {
							if (va == va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {
							mipsCodeTable.push_back(mipsCode(li, sx, "", "", va));
							mipsCodeTable.push_back(mipsCode(beq, sx, sy, mcNext.z));
						}
						else if (!get1 && get2) {
							mipsCodeTable.push_back(mipsCode(li, sy, "", "", va2));
							mipsCodeTable.push_back(mipsCode(beq, sx, sy, mcNext.z));
						}
						else {
							mipsCodeTable.push_back(mipsCode(beq, sx, sy, mcNext.z));
						}
					}
					i++;
					break;
				}
				case NEQOP: {
					string sx = "$t0", sy = "$t1";
					get1 = false;
					loadValue(mc.x, sx, false, va, get1);
					get2 = false;
					loadValue(mc.y, sy, false, va2, get2);
					mcNext = mcVe[i + 1];
					if (mcNext.op == BZ) {  //0跳
						if (get1 && get2) {
							if (va == va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {
							mipsCodeTable.push_back(mipsCode(li, sx, "", "", va));
							mipsCodeTable.push_back(mipsCode(beq, sx, sy, mcNext.z));
						}
						else if (!get1 && get2) {
							mipsCodeTable.push_back(mipsCode(li, sy, "", "", va2));
							mipsCodeTable.push_back(mipsCode(beq, sx, sy, mcNext.z));
						}
						else {
							mipsCodeTable.push_back(mipsCode(beq, sx, sy, mcNext.z));
						}
					}
					else if (mcNext.op == BNZ) {  //1跳
						if (get1 && get2) {
							if (va != va2) {
								mipsCodeTable.push_back(mipsCode(j, mcNext.z, "", ""));
							}
						}
						else if (get1 && !get2) {
							mipsCodeTable.push_back(mipsCode(li, sx, "", "", va));
							mipsCodeTable.push_back(mipsCode(bne, sx, sy, mcNext.z));
						}
						else if (!get1 && get2) {
							mipsCodeTable.push_back(mipsCode(li, sy, "", "", va2));
							mipsCodeTable.push_back(mipsCode(bne, sx, sy, mcNext.z));
						}
						else {
							mipsCodeTable.push_back(mipsCode(bne, sx, sy, mcNext.z));
						}
					}
					i++;
					break;
				}